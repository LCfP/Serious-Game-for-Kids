"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return call&&("object"==typeof call||"function"==typeof call)?call:self}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}var OrderController=function(_Controller){function OrderController(){return _classCallCheck(this,OrderController),_possibleConstructorReturn(this,(OrderController.__proto__||Object.getPrototypeOf(OrderController)).apply(this,arguments))}return _inherits(OrderController,_Controller),_createClass(OrderController,[{key:"validateOrder",value:function validateOrder(){throw new Error("Should be implemented by subclasses!")}},{key:"completeOrder",value:function completeOrder(a){var b=new HistoryController;b.log(a)}}],[{key:"_makeOrder",value:function _makeOrder(a){return a.map(function(b){var c=Math.floor(b.value);if(!c)return!1;var d=GAME.model.products.filter(function(f){return f.name==b.name}).shift(),e=new Product(b.name,$.extend({},d.values));return e.values.quantity=c,e}).filter(Boolean)}},{key:"_copyOrder",value:function _copyOrder(a){return OrderController._makeOrder(a.products.map(function(b){return{name:b.name,value:b.values.quantity}}))}}]),OrderController}(Controller);