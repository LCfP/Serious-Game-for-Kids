"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return call&&("object"==typeof call||"function"==typeof call)?call:self}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}var FactoryOrder=function(_OrderCore){function FactoryOrder(a,b,c){_classCallCheck(this,FactoryOrder);var _this=_possibleConstructorReturn(this,(FactoryOrder.__proto__||Object.getPrototypeOf(FactoryOrder)).call(this,a,24*c));return _this.id=b,_this.id=b,_this}return _inherits(FactoryOrder,_OrderCore),FactoryOrder}(OrderCore);