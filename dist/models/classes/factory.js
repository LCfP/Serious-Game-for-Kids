"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return call&&("object"==typeof call||"function"==typeof call)?call:self}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}var Factory=function(_StorageCore){function Factory(a,b){_classCallCheck(this,Factory);var _this=_possibleConstructorReturn(this,(Factory.__proto__||Object.getPrototypeOf(Factory)).call(this,a,0));return _this.products=b,_this.products=b,_this}return _inherits(Factory,_StorageCore),_createClass(Factory,[{key:"groupByProductType",value:function groupByProductType(){return this.products.reduce(function(a,b){return a.hasOwnProperty(b.values.type)?a[b.values.type].push(b):a[b.values.type]=[b],a},{})}}]),Factory}(StorageCore);